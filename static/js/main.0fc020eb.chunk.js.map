{"version":3,"sources":["components/Remaindes/InputValues/InputValues.module.scss","components/Remaindes/Rem.module.scss","redux/remaindesReducer.ts","redux/addRemReduer.ts","assets/PenIcon/PenIcon.tsx","components/Remaindes/InputValues/InputValues.tsx","assets/DeleteIcon/DeleteIcon.tsx","components/Remaindes/Rem.tsx","components/Remaindes/Remaindes.tsx","App.tsx","redux/store.ts","localStorage.ts","index.tsx","components/Remaindes/Remaindes.module.scss"],"names":["module","exports","InitialState","remaindesReducer","state","action","type","copyState","filter","tl","id","itemID","newItem","title","push","addRemaindesReducer","newValue","v1","value","productID","map","el","valID","PenIcon","style","width","height","version","xmlns","x","y","viewBox","d","InputValues","mode","useState","values","setValues","drawMode","setDrawMode","dispatch","useDispatch","className","classes","inputValue","active","onKeyPress","e","charCode","AddValueAC","input","onChange","currentTarget","onClick","btn","DeleteIcon","Rem","storage","localStorage","getItem","JSON","parse","setTitle","setMode","changeMode","changeTitleCallback","ChangeValueTitleAC","valueItem","removeValueAC","onBlur","Remaindes","useSelector","remaindesPage","addValuesPage","valuesPage","addItemCallback","AddItemAC","addProductInput","logo","inputWrapper","remaindes","h","wrapper","valueWrapper","delete","v","App","props","persistedState","serialzedState","err","loadState","reducers","combineReducers","addRemReduer","store","createStore","subscribe","serializedState","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fc020eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputValue\":\"InputValues_inputValue__3d-KW\",\"input\":\"InputValues_input__OwQjh\",\"active\":\"InputValues_active__3hdH_\",\"btn\":\"InputValues_btn__2ZERI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"valueItem\":\"Rem_valueItem__3_3Ef\",\"input\":\"Rem_input__2X07d\",\"btn\":\"Rem_btn__14f24\"};","import {v1} from \"uuid\";\nimport {AddItemActionType, HoseProductType, RemaindesPageType} from \"../types/types\";\nimport {ActionsType, DeleteValueActionType} from \"../types/types\";\n\n\n\n\n\n\n\n\n\n\nexport const AddItemAC = (title:string ): AddItemActionType => {\n    return {\n        type: \"ADD-ITEM\",\n        title,\n        itemID: v1()\n\n    }\n}\n\nexport const DeleteValueAC = (itemID:string):DeleteValueActionType => {\n    return {\n        type: \"DELETE-VALUE\",\n        itemID\n    }\n}\n\n\n\n\nlet InitialState: Array<HoseProductType> =  [\n\n]\n\n// localStorage.setItem('initial', JSON.stringify(InitialState))\n//\n// let initialStorage = localStorage.getItem('initial')\n//\n// let inStore = JSON.parse(initialStorage ? initialStorage : '{}')\n\n// let local = localStorage.getItem('local')\n//\n// let localStore:Array<HoseProductType> = JSON.parse(local  ? local : '{}')\n\n\nconst remaindesReducer = (state  = InitialState , action: ActionsType): Array<HoseProductType>  =>  {\n\n    switch (action.type) {\n        case \"DELETE-VALUE\": {\n\n            let copyState = state.filter((tl => tl.id !== action.itemID ))\n            // localStorage.setItem('local', JSON.stringify(copyState))\n            return copyState\n        }\n        case \"ADD-ITEM\": {\n            let copyState = [...state]\n\n            let newItem: HoseProductType = {\n                id: action.itemID,\n                title: action.title\n            }\n            copyState.push(newItem)\n\n            // localStorage.setItem('local', JSON.stringify(copyState))\n\n            return copyState;\n        }\n        default: {\n            return state;\n        }\n    }\n\n}\n\nexport default remaindesReducer;","import {v1} from \"uuid\";\nimport {\n    AddValueActionType,\n    AddValuesPage,\n    ChangeValueTitleActionType,\n    RemaindesType\n} from \"../types/types\";\nimport {ActionsType} from \"../types/types\";\n\n//\nlet InitialState: AddValuesPage = {}\n\nexport const ChangeValueTitleAC = (valID: string, title: string, productID: string): ChangeValueTitleActionType => {\n    return {\n        type: \"CHANGE-VALUE-TITLE\",\n        title,\n        productID,\n        valID,\n    }\n}\n\nexport const AddValueAC = (value: string, itemID: string): AddValueActionType => {\n    return {\n        type: \"ADD-VALUE\",\n        value,\n        itemID\n    }\n}\nexport const removeValueAC = (productID: string, valID: string) => {\n    return {\n        type: \"REMOVE-VALUE\",\n        productID,\n        valID\n    }\n}\n\n// let values = localStorage.getItem('values')\n// let InitialState: AddValuesPage = JSON.parse(values ? values : '{}')\n\n\nconst addRemaindesReducer = (state = InitialState, action: ActionsType): AddValuesPage => {\n    switch (action.type) {\n        case \"ADD-ITEM\": {\n\n            return {...state, [action.itemID]: []}\n        }\n        case \"ADD-VALUE\": {\n            let copyState = {...state}\n\n            let newValue: RemaindesType = {\n                id: v1(),\n                value: action.value\n\n            }\n\n            copyState[action.itemID].push(newValue)\n            // localStorage.setItem('values', JSON.stringify(copyState))\n            return copyState\n        }\n        case \"DELETE-VALUE\": {\n            let copyState={...state}\n            delete copyState[action.itemID];\n            return copyState;\n        }\n        case \"CHANGE-VALUE-TITLE\": {\n           return {...state,[action.productID]: state[action.productID].map(el =>{\n               if(el.id !== action.valID) return el\n                   else return {...el, value : action.title}\n               })}\n\n\n\n        }\n        case \"REMOVE-VALUE\": {\n            let copyState = {...state}\n\n            copyState[action.productID] = copyState[action.productID].filter((tl => tl.id !== action.valID ))\n            // localStorage.setItem('values', JSON.stringify(copyState))\n            return copyState\n        }\n        default: {\n            return state;\n        }\n    }\n\n}\n\nexport default addRemaindesReducer;\n\n\n// {...state,[action.productID]: state[action.productID]\n//     .map( val => {\n//         if(val.id === action.productID) {\n//             return {...val, value : action.title}\n//         }\n//         else return val\n//     })}","import React from 'react';\n\n\n\nconst PenIcon = () => {\n\n\n    const iconStyle = {\n        width: \"11px\",\n        height: '11px'\n    }\n\n    return <div style={iconStyle}>\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"   x=\"0px\" y=\"0px\"\n               viewBox=\"0 0 386.375 386.375\"\n              >\n<g>\n\t<path d=\"M21.05,286.875l76.5,76.5l-1.9,3.8l-95.6,19.2l19.1-95.6L21.05,286.875z M34.65,272.775l77.1,77.1l216.4-216.399\n\t\tl-77.101-77.1L34.65,272.775z M374.85,34.375l-23-22.9c-15.3-15.3-38.199-15.3-53.5,0l-32.5,32.5l76.5,76.5l32.5-32.5\n\t\tC390.15,72.675,390.15,47.775,374.85,34.375z\"/>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n</svg>\n     </div>\n}\n\nexport default PenIcon;","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport classes from './InputValues.module.scss';\nimport {useDispatch} from \"react-redux\";\nimport {AddValueAC} from \"../../../redux/addRemReduer\";\nimport PenIcon from \"../../../assets/PenIcon/PenIcon\";\n\n\n\ntype InputValuesPropsType = {\n    mode: boolean\n    itemID: string\n}\n\n\n\nconst  InputValues:React.FC<InputValuesPropsType> = ({itemID,mode }) => {\n\n    const [values, setValues] = useState<string>('')\n    const [drawMode, setDrawMode] = useState<boolean>(true)\n    const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setValues(e.currentTarget.value)\n    }\n    const dispatch = useDispatch()\n\n    const changeDrawMode = () => {\n        setDrawMode(!drawMode)\n    }\n\n    const setValuesCallback = () => {\n        dispatch(AddValueAC(values, itemID))\n        setValues('')\n    }\n    const onKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>) => {\n        if(e.charCode === 13) {\n            setValuesCallback()\n        }\n    }\n    return  (\n        <div className={`${classes.inputValue} ${mode ? classes.active : \"\"}`}>\n          <input onKeyPress={onKeyPressHandler} className={`${classes.input} ${ drawMode ? classes.active :\"\"}`} value={values} onChange={onChangeValue} type=\"text\"/>\n            <button onClick={changeDrawMode} className={classes.btn} >\n                <PenIcon/>\n            </button>\n        </div>\n    )\n\n}\n\nexport default InputValues;","import React from 'react';\n\n\n\nconst DeleteIcon = () => {\n\n\n    const iconStyle = {\n        width: \"24px\",\n        height: '24px'\n    }\n\n    return <div style={iconStyle}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22,5H17V2a1,1,0,0,0-1-1H8A1,1,0,0,0,7,2V5H2A1,1,0,0,0,2,7H3.061L4,22.063A1,1,0,0,0,5,23H19a1,1,0,0,0,1-.937L20.939,7H22a1,1,0,0,0,0-2ZM9,3h6V5H9Zm9.061,18H5.939L5.064,7H18.936ZM9,11v6a1,1,0,0,1-2,0V11a1,1,0,0,1,2,0Zm4,0v6a1,1,0,0,1-2,0V11a1,1,0,0,1,2,0Zm3-1a1,1,0,0,1,1,1v6a1,1,0,0,1-2,0V11A1,1,0,0,1,16,10Z\"/></svg>\n    </div>\n}\n\nexport default DeleteIcon;","import React, {ChangeEvent, useState, KeyboardEvent} from 'react';\nimport classes from \"./Rem.module.scss\";\nimport {useDispatch} from \"react-redux\";\nimport {ChangeValueTitleAC, removeValueAC} from \"../../redux/addRemReduer\";\n\n\ntype RemType = {\n    value: string\n    productID: string\n    valID: string\n\n}\n\nconst Rem: React.FC<RemType> = ({value,productID,valID}) => {\n\n    let storage = localStorage.getItem('values')\n\n    let storageValues = JSON.parse(storage ?  storage : '{}')\n\n    const [title, setTitle] = useState<string>(value)\n    const [mode, setMode] = useState<boolean>(false)\n\n    const dispatch = useDispatch()\n\n  const changeMode = () => {\n        setMode(!mode)\n  }\n\n  const changeNewValue = (e:ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n  }\n\n  const changeTitleCallback = () => {\n        dispatch(ChangeValueTitleAC(valID,title,productID))\n        changeMode();\n  }\n  const deleteValue = () => {\n        dispatch(removeValueAC(productID, valID))\n  }\n  const onKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>) => {\n        if(e.charCode === 13) {\n            changeTitleCallback()\n        }\n  }\n\n    return (\n\n\n            <div className={classes.valueItem}>\n                <button onClick={deleteValue} className={classes.btn}>x</button>\n                {mode ? <input onKeyPress={onKeyPressHandler} className={classes.input} value={title} onChange={changeNewValue} onBlur={changeTitleCallback} type=\"text\"/> : <span onClick={changeMode}>{value}м</span>}\n            </div>\n\n\n    )\n}\n\nexport default Rem;","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport classes from './Remaindes.module.scss';\nimport {StateType} from \"../../redux/store\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AddValuesPage, HoseProductType} from \"../../types/types\";\nimport {AddItemAC, DeleteValueAC} from \"../../redux/remaindesReducer\";\n\nimport InputValues from \"./InputValues/InputValues\";\nimport DeleteIcon from \"../../assets/DeleteIcon/DeleteIcon\";\nimport Rem from \"./Rem\";\nimport PenIcon from \"../../assets/PenIcon/PenIcon\";\n\ntype RemaindesType = {}\n\nconst Remaindes: React.FC<RemaindesType> = () => {\n\n    let state = useSelector<StateType, Array<HoseProductType>>(state => state.remaindesPage)\n    let addValuesPage = useSelector<StateType, AddValuesPage>(state => state.valuesPage)\n    let dispatch = useDispatch();\n    const [title, setTitle] = useState<string>('')\n    const [mode, setMode] = useState<boolean>(false)\n\n\n    const addItemCallback = () => {\n        dispatch(AddItemAC(title));\n        setTitle('')\n\n    }\n\n\n    const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13) {\n            addItemCallback()\n        }\n    }\n\n    const changeMode = () => {\n        setMode(!mode)\n    }\n    return (\n        <div className={classes.remaindesPage}>\n            <div className={classes.addProductInput}>\n                <h6 className={classes.logo}>Снабженец</h6>\n                <div className={classes.inputWrapper}>\n                    <input onKeyPress={onKeyPressHandler} className={classes.input} value={title}\n                           onChange={onChangeTitle} type=\"text\"/>\n                    <button className={classes.btn} onClick={addItemCallback}>Добавить товар</button>\n                </div>\n\n\n            </div>\n            <div className={classes.remaindes}>\n                {state.map(h => {\n\n                    return <div className={classes.wrapper} key={h.id}>\n\n\n                        <div className={classes.valueWrapper}>\n                            <button className={classes.delete} onClick={() => {\n                                dispatch(DeleteValueAC(h.id))\n                            }\n                            }>\n                                <DeleteIcon/>\n                            </button>\n                            <div className={classes.title}>\n                                {h.title}\n\n                            </div>\n                            <div className={classes.value}>\n                                {addValuesPage[h.id].map(v => {\n\n                                    return <Rem\n                                        key={v.id}\n                                        valID={v.id}\n                                        productID={h.id}\n                                        value={v.value}/>\n                                })}\n                            </div>\n\n                            <InputValues mode={mode} itemID={h.id}/>\n                        </div>\n\n                    </div>\n                }) }\n\n            </div>\n        </div>\n    )\n}\n\nexport default Remaindes;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Remaindes from \"./components/Remaindes/Remaindes\";\nimport AddRemaindes from \"./components/AddRemaindes/AddRemaindes\";\n\n\ntype AppPropsType = {}\n\nfunction App(props: AppPropsType) {\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"routeWrapper\">\n                <Remaindes/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore, Store} from \"redux\";\nimport {AddValuesPage, HoseProductType, RemaindesPageType} from \"../types/types\";\nimport remaindesReducer from \"./remaindesReducer\";\nimport {ActionsType} from \"../types/types\";\nimport addRemReduer from \"./addRemReduer\";\nimport {loadState} from \"../localStorage\";\n\n\nexport type StateType = {\n    remaindesPage: Array<HoseProductType>\n    valuesPage: AddValuesPage\n\n}\n\nconst persistedState = loadState()\n\nexport type  StateReducersType = ReturnType<typeof reducers>\n\n\nlet reducers = combineReducers({\n    remaindesPage: remaindesReducer,\n    valuesPage: addRemReduer\n\n})\n\nexport type RootStateType = Store<StateReducersType, ActionsType>\n\nlet store = createStore(\n    reducers,\n    persistedState\n);\n\n\nexport default store;\n\n\n\n","import {StateType} from \"./redux/store\";\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serialzedState = localStorage.getItem('state')\r\n        if (serialzedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serialzedState)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const saveState = (state:StateType) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state',serializedState)\r\n    } catch (err) {\r\n\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {saveState} from \"./localStorage\";\n\n\nstore.subscribe(() => {\n    saveState(store.getState())\n})\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    ,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remaindesPage\":\"Remaindes_remaindesPage__pM2qW\",\"addProductInput\":\"Remaindes_addProductInput__3de_r\",\"logo\":\"Remaindes_logo__3jlLE\",\"inputWrapper\":\"Remaindes_inputWrapper__35Ccf\",\"input\":\"Remaindes_input__3Gs71\",\"btn\":\"Remaindes_btn__lmjIM\",\"remaindes\":\"Remaindes_remaindes__2Ii1J\",\"wrapper\":\"Remaindes_wrapper__3YU0m\",\"title\":\"Remaindes_title__1I18T\",\"pen\":\"Remaindes_pen__1iIJ4\",\"value\":\"Remaindes_value__qkSOV\",\"itemValue\":\"Remaindes_itemValue__12ZfN\",\"valueWrapper\":\"Remaindes_valueWrapper__432mn\",\"delete\":\"Remaindes_delete__1P249\"};"],"sourceRoot":""}