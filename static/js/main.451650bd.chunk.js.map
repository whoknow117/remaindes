{"version":3,"sources":["components/Remaindes/InputValues/InputValues.module.scss","components/Remaindes/Rem.module.scss","redux/remaindesReducer.ts","redux/addRemReduer.ts","components/Remaindes/InputValues/InputValues.tsx","assets/DeleteIcon/DeleteIcon.tsx","components/Remaindes/Rem.tsx","assets/PenIcon/PenIcon.tsx","components/Remaindes/Remaindes.tsx","App.tsx","redux/store.ts","index.tsx","components/Remaindes/Remaindes.module.scss"],"names":["module","exports","localStorage","setItem","JSON","stringify","initialStorage","getItem","local","localStore","parse","remaindesReducer","state","action","type","copyState","filter","tl","id","itemID","newItem","title","push","values","valuesStorage","addRemaindesReducer","newValue","v1","value","productID","v","valID","InputValues","mode","useState","setValues","dispatch","useDispatch","className","classes","inputValue","active","input","onChange","e","currentTarget","btn","onClick","AddValueAC","DeleteIcon","style","width","height","xmlns","viewBox","d","Rem","storage","setTitle","setMode","changeMode","valueItem","removeValueAC","onBlur","ChangeValueTitleAC","PenIcon","version","x","y","Remaindes","useSelector","remaindesPage","addValuesPage","valuesPage","addProductInput","logo","AddItemAC","remaindes","map","h","wrapper","valueWrapper","delete","pen","App","props","reducers","combineReducers","addRemReduer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,MAAQ,2BAA2B,IAAM,yBAAyB,OAAS,8B,mBCA1ID,EAAOC,QAAU,CAAC,UAAY,uBAAuB,IAAM,mB,sJCmC3DC,aAAaC,QAAQ,UAAWC,KAAKC,UAJO,KAM5C,IAAIC,EAAiBJ,aAAaK,QAAQ,WAItCC,EAAQN,aAAaK,QAAQ,SAE7BE,EAAoCL,KAAKM,MAAMF,GAAiBJ,KAAKM,MAAMJ,GAAiC,OAgCjGK,EA7BU,WAA0E,IAAzEC,EAAwE,uDAA/DH,EAAaI,EAAkD,uCAE9F,OAAQA,EAAOC,MACX,IAAK,eAED,IAAIC,EAAYH,EAAMI,QAAQ,SAAAC,GAAE,OAAIA,EAAGC,KAAOL,EAAOM,UAErD,OADAjB,aAAaC,QAAQ,QAASC,KAAKC,UAAUU,IACtCA,EAEX,IAAK,WACD,IAAIA,EAAS,YAAOH,GAEhBQ,EAA2B,CAC3BF,GAAIL,EAAOM,OACXE,MAAOR,EAAOQ,OAMlB,OAJAN,EAAUO,KAAKF,GAEflB,aAAaC,QAAQ,QAASC,KAAKC,UAAUU,IAEtCA,EAEX,QACI,OAAOH,I,gCClCfW,EAASrB,aAAaK,QAAQ,UAC9BiB,EAA+BpB,KAAKM,MAAMa,GAAkB,MAoDjDE,EAjDa,WAAgE,IAA/Db,EAA8D,uDAAtDY,EAAeX,EAAuC,uCACvF,OAAQA,EAAOC,MACX,IAAK,WAED,OAAO,2BAAIF,GAAX,kBAAmBC,EAAOM,OAAS,KAEvC,IAAK,YACD,IAAIJ,EAAS,eAAOH,GAEhBc,EAA0B,CAC1BR,GAAIS,cACJC,MAAOf,EAAOe,OAMlB,OAFAb,EAAUF,EAAOM,QAAQG,KAAKI,GAC9BxB,aAAaC,QAAQ,SAAUC,KAAKC,UAAUU,IACvCA,EAEX,IAAK,eACD,IAAIA,EAAU,eAAIH,GAElB,cADOG,EAAUF,EAAOM,QACjBJ,EAEX,IAAK,qBACD,IAAIA,EAAS,eAAOH,GAKpB,OAJAG,EAAUF,EAAOgB,WAAad,EAAUF,EAAOgB,WAAWb,QAAQ,SAAAc,GAAC,OAAIA,EAAEZ,KAAOL,EAAOkB,MACvFD,EAAEF,MAAQf,EAAOQ,MAAQS,KAEzB5B,aAAaC,QAAQ,SAAUC,KAAKC,UAAUU,IACvCA,EAKX,IAAK,eACD,IAAIA,EAAS,eAAOH,GAIpB,OAFAG,EAAUF,EAAOgB,WAAad,EAAUF,EAAOgB,WAAWb,QAAQ,SAAAC,GAAE,OAAIA,EAAGC,KAAOL,EAAOkB,SACzF7B,aAAaC,QAAQ,SAAUC,KAAKC,UAAUU,IACvCA,EAEX,QACI,OAAOH,I,OC7CJoB,EAxBqC,SAAC,GAAoB,IAAnBb,EAAkB,EAAlBA,OAAOc,EAAW,EAAXA,KAAW,EAExCC,mBAAiB,IAFuB,mBAE7DX,EAF6D,KAErDY,EAFqD,KAQ9DC,EAAWC,cAOjB,OACI,sBAAKC,UAAS,UAAKC,IAAQC,WAAb,YAA2BP,EAAOM,IAAQE,OAAS,IAAjE,UACI,uBAAOH,UAAWC,IAAQG,MAAOd,MAAOL,EAAQoB,SAblC,SAACC,GACnBT,EAAUS,EAAEC,cAAcjB,QAYmDd,KAAK,SAC9E,wBAAQwB,UAAWC,IAAQO,IAAKC,QARd,WACtBX,EDJkB,SAACR,EAAeT,GACtC,MAAO,CACHL,KAAM,YACNc,QACAT,UCAS6B,CAAWzB,EAAQJ,IAC5BgB,EAAU,KAMN,6GCfGc,EAbI,WAQf,OAAO,qBAAKC,MALM,CACdC,MAAO,OACPC,OAAQ,QAGL,SACH,qBAAKC,MAAM,6BAA6BC,QAAQ,YAAhD,SAA4D,sBAAMC,EAAE,8T,iBCuC7DC,EAvCgB,SAAC,GAA6B,IAA5B5B,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,UAAUE,EAAW,EAAXA,MAEzC0B,EAAUvD,aAAaK,QAAQ,UAFqB,GAIpCH,KAAKM,MAAM+C,GAAqB,MAE1BvB,mBAAiBN,IANa,mBAMjDP,EANiD,KAM1CqC,EAN0C,OAOhCxB,oBAAkB,GAPc,mBAOjDD,EAPiD,KAO3C0B,EAP2C,KASlDvB,EAAWC,cAEbuB,EAAa,WACbD,GAAS1B,IAeb,OAGQ,sBAAKK,UAAWC,IAAQsB,UAAxB,UACI,wBAAQd,QARF,WACdX,EHTqB,SAACP,EAAmBE,GAC7C,MAAO,CACHjB,KAAM,eACNe,YACAE,SGKS+B,CAAcjC,EAAWE,KAOIO,UAAWC,IAAQO,IAAjD,eACCb,EAAO,uBAAOL,MAAOP,EAAOsB,SAjBpB,SAACC,GAClBc,EAASd,EAAEC,cAAcjB,QAgBsCmC,OAbzC,WACtB3B,EHrB0B,SAACL,EAAeV,EAAeQ,GAC7D,MAAO,CACHf,KAAM,qBACNO,QACAQ,YACAE,SGgBSiC,CAAmBjC,EAAMH,EAAMC,IACxC+B,KAW4F9C,KAAK,SAAW,uBAAMiC,QAASa,EAAf,UAA4BhC,EAA5B,gBCUrGqC,EAnDC,WAQZ,OAAO,qBAAKf,MALM,CACdC,MAAO,OACPC,OAAQ,QAGL,SACH,sBAAKc,QAAQ,MAAMhD,GAAG,SAASmC,MAAM,6BAA+Bc,EAAE,MAAMC,EAAE,MACvEd,QAAQ,sBADf,UAGR,4BACC,sBAAMC,EAAE,iRAIG,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,sBAEA,4BCsCGc,EAzE4B,WAEvC,IAAIzD,EAAQ0D,aAA+C,SAAA1D,GAAK,OAAIA,EAAM2D,iBACtEC,EAAgBF,aAAsC,SAAA1D,GAAK,OAAIA,EAAM6D,cACrErC,EAAWC,cAJ8B,EAKnBH,mBAAiB,IALE,mBAKtCb,EALsC,KAK/BqC,EAL+B,OAMrBxB,oBAAkB,GANG,mBAMtCD,EANsC,KAMhC0B,EANgC,KAoBvCC,EAAa,WACfD,GAAS1B,IAEb,OACI,sBAAKK,UAAWC,IAAQgC,cAAxB,UACI,sBAAKjC,UAAWC,IAAQmC,gBAAxB,UACI,oBAAIpC,UAAWC,IAAQoC,KAAvB,oEACA,uBAAOrC,UAAWC,IAAQG,MAAOd,MAAOP,EAAOsB,SAZrC,SAACC,GACnBc,EAASd,EAAEC,cAAcjB,QAWuDd,KAAK,SAC7E,wBAAQwB,UAAWC,IAAQO,IAAKC,QAnBpB,WACpBX,ENXiB,SAACf,GACtB,MAAO,CACHP,KAAM,WACNO,QACAF,OAAQQ,eMOCiD,CAAUvD,KAkBX,gGAIJ,qBAAKiB,UAAWC,IAAQsC,UAAxB,SACKjE,EAAMkE,KAAI,SAAAC,GAEP,OAAO,qBAAKzC,UAAWC,IAAQyC,QAAxB,SAGH,sBAAK1C,UAAWC,IAAQ0C,aAAxB,UACI,wBAAQ3C,UAAWC,IAAQ2C,OAAQnC,QAAS,WACxCX,EN/BrB,CACHtB,KAAM,eACNK,OM6B+C4D,EAAE7D,MAD7B,SAII,cAAC,EAAD,MAEJ,sBAAKoB,UAAWC,IAAQlB,MAAxB,UACK0D,EAAE1D,MACH,wBAAQ0B,QAASa,EAAYtB,UAAWC,IAAQ4C,IAAhD,SACI,cAAC,EAAD,SAGR,qBAAK7C,UAAWC,IAAQX,MAAxB,SACK4C,EAAcO,EAAE7D,IAAI4D,KAAI,SAAAhD,GAErB,OAAO,cAAC,EAAD,CAEHC,MAAOD,EAAEZ,GACTW,UAAWkD,EAAE7D,GACbU,MAAOE,EAAEF,OAHJE,EAAEZ,SAOjB,cAAC,EAAD,CAAae,KAAMA,EAAMd,OAAQ4D,EAAE7D,SA3BA6D,EAAE7D,aC5BpDkE,MAZf,SAAaC,GAGT,OACI,qBAAK/C,UAAU,MAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,S,QCEZgD,EAAWC,YAAgB,CAC3BhB,cAAe5D,EACf8D,WAAYe,IASDC,EAHHC,YAAYJ,GClBxBK,IAASC,OACL,cAAC,IAAD,UACD,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,QAILI,SAASC,eAAe,U,kBCb1B9F,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,gBAAkB,mCAAmC,KAAO,wBAAwB,MAAQ,yBAAyB,IAAM,uBAAuB,UAAY,6BAA6B,QAAU,2BAA2B,MAAQ,yBAAyB,IAAM,uBAAuB,MAAQ,yBAAyB,UAAY,6BAA6B,aAAe,gCAAgC,OAAS,6B","file":"static/js/main.451650bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputValue\":\"InputValues_inputValue__3d-KW\",\"input\":\"InputValues_input__OwQjh\",\"btn\":\"InputValues_btn__2ZERI\",\"active\":\"InputValues_active__3hdH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"valueItem\":\"Rem_valueItem__3_3Ef\",\"btn\":\"Rem_btn__14f24\"};","import {v1} from \"uuid\";\nimport {AddItemActionType, HoseProductType, RemaindesPageType} from \"../types/types\";\nimport {ActionsType, DeleteValueActionType} from \"../types/types\";\n\n\n\n\n\n\n\n\n\n\nexport const AddItemAC = (title:string ): AddItemActionType => {\n    return {\n        type: \"ADD-ITEM\",\n        title,\n        itemID: v1()\n\n    }\n}\n\nexport const DeleteValueAC = (itemID:string):DeleteValueActionType => {\n    return {\n        type: \"DELETE-VALUE\",\n        itemID\n    }\n}\n\n\n\n\nlet InitialState: Array<HoseProductType> =  [\n\n]\n\nlocalStorage.setItem('initial', JSON.stringify(InitialState))\n\nlet initialStorage = localStorage.getItem('initial')\n\n\n\nlet local = localStorage.getItem('local')\n\nlet localStore:Array<HoseProductType> = JSON.parse(local  ? local : JSON.parse(initialStorage ? initialStorage: '{}'))\n\n\nconst remaindesReducer = (state  = localStore , action: ActionsType): Array<HoseProductType>  =>  {\n\n    switch (action.type) {\n        case \"DELETE-VALUE\": {\n\n            let copyState = state.filter((tl => tl.id !== action.itemID ))\n            localStorage.setItem('local', JSON.stringify(copyState))\n            return copyState\n        }\n        case \"ADD-ITEM\": {\n            let copyState = [...state]\n\n            let newItem: HoseProductType = {\n                id: action.itemID,\n                title: action.title\n            }\n            copyState.push(newItem)\n\n            localStorage.setItem('local', JSON.stringify(copyState))\n\n            return copyState;\n        }\n        default: {\n            return state;\n        }\n    }\n\n}\n\nexport default remaindesReducer;","import {v1} from \"uuid\";\nimport {\n    AddValueActionType,\n    AddValuesPage,\n    ChangeValueTitleActionType,\n    RemaindesType\n} from \"../types/types\";\nimport {ActionsType} from \"../types/types\";\n\n\nlet InitialState: AddValuesPage = {}\n\nexport const ChangeValueTitleAC = (valID: string, title: string, productID: string): ChangeValueTitleActionType => {\n    return {\n        type: \"CHANGE-VALUE-TITLE\",\n        title,\n        productID,\n        valID,\n    }\n}\n\nexport const AddValueAC = (value: string, itemID: string): AddValueActionType => {\n    return {\n        type: \"ADD-VALUE\",\n        value,\n        itemID\n    }\n}\nexport const removeValueAC = (productID: string, valID: string) => {\n    return {\n        type: \"REMOVE-VALUE\",\n        productID,\n        valID\n    }\n}\n\nlet values = localStorage.getItem('values')\nlet valuesStorage: AddValuesPage = JSON.parse(values ? values : '{}')\n\n\nconst addRemaindesReducer = (state = valuesStorage, action: ActionsType): AddValuesPage => {\n    switch (action.type) {\n        case \"ADD-ITEM\": {\n\n            return {...state, [action.itemID]: []}\n        }\n        case \"ADD-VALUE\": {\n            let copyState = {...state}\n\n            let newValue: RemaindesType = {\n                id: v1(),\n                value: action.value\n\n            }\n\n            copyState[action.itemID].push(newValue)\n            localStorage.setItem('values', JSON.stringify(copyState))\n            return copyState\n        }\n        case \"DELETE-VALUE\": {\n            let copyState={...state}\n            delete copyState[action.itemID];\n            return copyState;\n        }\n        case \"CHANGE-VALUE-TITLE\": {\n            let copyState = {...state}\n            copyState[action.productID] = copyState[action.productID].filter( v => v.id === action.valID ?\n            v.value = action.title : v)\n\n            localStorage.setItem('values', JSON.stringify(copyState))\n            return copyState\n\n\n\n        }\n        case \"REMOVE-VALUE\": {\n            let copyState = {...state}\n\n            copyState[action.productID] = copyState[action.productID].filter((tl => tl.id !== action.valID ))\n            localStorage.setItem('values', JSON.stringify(copyState))\n            return copyState\n        }\n        default: {\n            return state;\n        }\n    }\n\n}\n\nexport default addRemaindesReducer;\n\n\n// {...state,[action.productID]: state[action.productID]\n//     .map( val => {\n//         if(val.id === action.productID) {\n//             return {...val, value : action.title}\n//         }\n//         else return val\n//     })}","import React, {ChangeEvent, useState} from 'react';\nimport classes from './InputValues.module.scss';\nimport {useDispatch} from \"react-redux\";\nimport {AddValueAC} from \"../../../redux/addRemReduer\";\n\n\n\ntype InputValuesPropsType = {\n    mode: boolean\n    itemID: string\n}\n\n\n\nconst  InputValues:React.FC<InputValuesPropsType> = ({itemID,mode }) => {\n\n    const [values, setValues] = useState<string>('')\n\n    const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setValues(e.currentTarget.value)\n    }\n\n    const dispatch = useDispatch()\n\n    const setValuesCallback = () => {\n        dispatch(AddValueAC(values, itemID))\n        setValues('')\n    }\n\n    return  (\n        <div className={`${classes.inputValue} ${mode ? classes.active : \"\"}`}>\n            <input className={classes.input} value={values} onChange={onChangeValue} type=\"text\"/>\n            <button className={classes.btn} onClick={setValuesCallback}>добавить остаток</button>\n        </div>\n    )\n\n}\n\nexport default InputValues;","import React from 'react';\n\n\n\nconst DeleteIcon = () => {\n\n\n    const iconStyle = {\n        width: \"24px\",\n        height: '24px'\n    }\n\n    return <div style={iconStyle}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22,5H17V2a1,1,0,0,0-1-1H8A1,1,0,0,0,7,2V5H2A1,1,0,0,0,2,7H3.061L4,22.063A1,1,0,0,0,5,23H19a1,1,0,0,0,1-.937L20.939,7H22a1,1,0,0,0,0-2ZM9,3h6V5H9Zm9.061,18H5.939L5.064,7H18.936ZM9,11v6a1,1,0,0,1-2,0V11a1,1,0,0,1,2,0Zm4,0v6a1,1,0,0,1-2,0V11a1,1,0,0,1,2,0Zm3-1a1,1,0,0,1,1,1v6a1,1,0,0,1-2,0V11A1,1,0,0,1,16,10Z\"/></svg>\n    </div>\n}\n\nexport default DeleteIcon;","import React, {ChangeEvent, useState} from 'react';\nimport classes from \"./Rem.module.scss\";\nimport {useDispatch} from \"react-redux\";\nimport {ChangeValueTitleAC, removeValueAC} from \"../../redux/addRemReduer\";\n\n\ntype RemType = {\n    value: string\n    productID: string\n    valID: string\n\n}\n\nconst Rem: React.FC<RemType> = ({value,productID,valID}) => {\n\n    let storage = localStorage.getItem('values')\n\n    let storageValues = JSON.parse(storage ?  storage : '{}')\n\n    const [title, setTitle] = useState<string>(value)\n    const [mode, setMode] = useState<boolean>(false)\n\n    const dispatch = useDispatch()\n\n  const changeMode = () => {\n        setMode(!mode)\n  }\n\n  const changeNewValue = (e:ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n  }\n\n  const changeTitleCallback = () => {\n        dispatch(ChangeValueTitleAC(valID,value,productID))\n        changeMode();\n  }\n  const deleteValue = () => {\n        dispatch(removeValueAC(productID, valID))\n  }\n\n    return (\n\n\n            <div className={classes.valueItem}>\n                <button onClick={deleteValue} className={classes.btn}>x</button>\n                {mode ? <input value={title} onChange={changeNewValue} onBlur={changeTitleCallback} type=\"text\"/> : <span onClick={changeMode}>{value}м</span>}\n            </div>\n\n\n    )\n}\n\nexport default Rem;","import React from 'react';\n\n\n\nconst PenIcon = () => {\n\n\n    const iconStyle = {\n        width: \"11px\",\n        height: '11px'\n    }\n\n    return <div style={iconStyle}>\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"   x=\"0px\" y=\"0px\"\n               viewBox=\"0 0 386.375 386.375\"\n              >\n<g>\n\t<path d=\"M21.05,286.875l76.5,76.5l-1.9,3.8l-95.6,19.2l19.1-95.6L21.05,286.875z M34.65,272.775l77.1,77.1l216.4-216.399\n\t\tl-77.101-77.1L34.65,272.775z M374.85,34.375l-23-22.9c-15.3-15.3-38.199-15.3-53.5,0l-32.5,32.5l76.5,76.5l32.5-32.5\n\t\tC390.15,72.675,390.15,47.775,374.85,34.375z\"/>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n            <g>\n</g>\n</svg>\n     </div>\n}\n\nexport default PenIcon;","import React, {ChangeEvent, useState} from 'react';\nimport classes from './Remaindes.module.scss';\nimport {StateType} from \"../../redux/store\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AddValuesPage, HoseProductType} from \"../../types/types\";\nimport {AddItemAC, DeleteValueAC} from \"../../redux/remaindesReducer\";\n\nimport InputValues from \"./InputValues/InputValues\";\nimport DeleteIcon from \"../../assets/DeleteIcon/DeleteIcon\";\nimport Rem from \"./Rem\";\nimport PenIcon from \"../../assets/PenIcon/PenIcon\";\n\ntype RemaindesType = {}\n\nconst Remaindes: React.FC<RemaindesType> = () => {\n\n    let state = useSelector<StateType, Array<HoseProductType>>(state => state.remaindesPage)\n    let addValuesPage = useSelector<StateType, AddValuesPage>(state => state.valuesPage)\n    let dispatch = useDispatch();\n    const [title, setTitle] = useState<string>('')\n    const [mode, setMode] = useState<boolean>(false)\n\n\n    const addItemCallback = () => {\n        dispatch(AddItemAC(title));\n\n    }\n\n\n    const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n\n    const changeMode = () =>{\n        setMode(!mode)\n    }\n    return (\n        <div className={classes.remaindesPage}>\n            <div className={classes.addProductInput}>\n                <h6 className={classes.logo}>Снабженец</h6>\n                <input className={classes.input} value={title} onChange={onChangeTitle} type=\"text\"/>\n                <button className={classes.btn} onClick={addItemCallback}>Добавить товар</button>\n\n\n            </div>\n            <div className={classes.remaindes}>\n                {state.map(h => {\n\n                    return <div className={classes.wrapper} key={h.id}>\n\n\n                        <div className={classes.valueWrapper}>\n                            <button className={classes.delete} onClick={() => {\n                                dispatch(DeleteValueAC(h.id))\n                            }\n                            }>\n                                <DeleteIcon/>\n                            </button>\n                            <div className={classes.title}>\n                                {h.title}\n                                <button onClick={changeMode} className={classes.pen}>\n                                    <PenIcon/>\n                                </button>\n                            </div>\n                            <div className={classes.value}>\n                                {addValuesPage[h.id].map(v => {\n\n                                    return <Rem\n                                        key={v.id}\n                                        valID={v.id}\n                                        productID={h.id}\n                                        value={v.value}/>\n                                })}\n                            </div>\n\n                              <InputValues mode={mode} itemID={h.id}/>\n                        </div>\n\n                    </div>\n                })}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Remaindes;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Remaindes from \"./components/Remaindes/Remaindes\";\nimport AddRemaindes from \"./components/AddRemaindes/AddRemaindes\";\n\n\ntype AppPropsType = {}\n\nfunction App(props: AppPropsType) {\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"routeWrapper\">\n                <Remaindes/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore, Store} from \"redux\";\nimport {AddValuesPage, HoseProductType, RemaindesPageType} from \"../types/types\";\nimport remaindesReducer from \"./remaindesReducer\";\nimport {ActionsType} from \"../types/types\";\nimport addRemReduer from \"./addRemReduer\";\n\n\nexport type StateType = {\n    remaindesPage: Array<HoseProductType>\n    valuesPage: AddValuesPage\n\n}\n\n\nexport type  StateReducersType = ReturnType<typeof reducers>\n\n\nlet reducers = combineReducers({\n    remaindesPage: remaindesReducer,\n    valuesPage: addRemReduer\n\n})\n\nexport type RootStateType = Store<StateReducersType, ActionsType>\n\nlet store = createStore(reducers);\n\n\nexport default store;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n   <Provider store={store}>\n       <App  />\n   </Provider>\n    </BrowserRouter>\n ,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remaindesPage\":\"Remaindes_remaindesPage__pM2qW\",\"addProductInput\":\"Remaindes_addProductInput__3de_r\",\"logo\":\"Remaindes_logo__3jlLE\",\"input\":\"Remaindes_input__3Gs71\",\"btn\":\"Remaindes_btn__lmjIM\",\"remaindes\":\"Remaindes_remaindes__2Ii1J\",\"wrapper\":\"Remaindes_wrapper__3YU0m\",\"title\":\"Remaindes_title__1I18T\",\"pen\":\"Remaindes_pen__1iIJ4\",\"value\":\"Remaindes_value__qkSOV\",\"itemValue\":\"Remaindes_itemValue__12ZfN\",\"valueWrapper\":\"Remaindes_valueWrapper__432mn\",\"delete\":\"Remaindes_delete__1P249\"};"],"sourceRoot":""}